<?php


namespace System\App\Forms;


class FormMenuButton extends FormButton
{
    /**
     * @var array <FormDropdownOption>
     */
    private $menuOptions = [];

    /**
     * @return array <FormDropdownOption>
     */
    public function getMenuOptions(): array
    {
        return $this->menuOptions;
    }

    /**
     * @param FormDropdownOption $menuOptions
     *
     * @return FormMenuButton
     */
    public function addMenuOptions(FormDropdownOption $menuOptions): FormMenuButton
    {
        $this->menuOptions[] = $menuOptions;
        return $this;
    }

    /**
     * @return string
     */
    public function getElementHTML()
    {


        $html = '<ul class="order-md-0 navbar-nav">
                    <!-- User Dropdown -->
                    <li class="nav-item dropdown">
                        <a class="nav-link" href="#" id="navbardrop" data-toggle="dropdown">
                            ' . $this->getName() . '

                        </a>
                        <div class="shadow dropdown-menu dropdown-menu-right pt-0">
                            <div class="dropdown-header"><strong>' . $this->getSubLabel() . '</strong></div>
';
        $optionsHTML = '';
        $optionModalsHTML = '';
        /* @var $option \System\App\Forms\FormDropdownOption */
        foreach ($this->getMenuOptions() as $option) {
            // var_dump($option);
            $optionsHTML .= ' <a class="dropdown-item" href="' . $option->getValue() . '"    data-toggle="modal" data-target="#' . $option->getModal()->getId() . '">' . $option->getLabel() . '</a>';
            $optionModalsHTML .= $option->printModals();
        }
        $html .= $optionsHTML;
        $html .= '    </div>';
        $html .= $optionModalsHTML .
            ' </li >
                </ul > ';

        return $html;


        // TODO: Change the autogenerated stub
    }


}